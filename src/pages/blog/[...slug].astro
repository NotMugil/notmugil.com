---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@/layouts/Layout.astro";
import Navigation from "@/components/Navigation.astro";
import SeoPost from "@/components/SeoPost.astro";
import { formatDate, readingTime } from "@/lib/util";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const authors = await getCollection("authors");
const author = authors.find((user) => user.slug === entry.data.author);

if (!author) {
  console.warn(
    `Author data is not registered or slug doesn't exist for: ${entry.data.author}`,
  );
}

const readTime = readingTime(entry.body);
const { Content, headings } = await entry.render();
---

<Layout>
  <SeoPost slot="head" entry={entry} />
  <div>
    <!-- Blog Info -->
    <h1 class="mt-3 py-2 text-2xl font-bold">{entry.data.title}</h1>
    <div class="flex flex-row gap-2 text-gray-400">
      <p class="text-sm md:text-xs">{readTime}</p>
      <span class="text-sm md:text-xs">â€¢</span>
      <p class="text-sm md:text-xs">{formatDate(entry.data.publicationDate)}</p>
    </div>

    <hr class="z-0 mb-6 mt-3 opacity-5" />

    <div class="mt-10 flex flex-row">
      <article
        class="flex-l prose prose-dark z-10 mx-auto w-full lg:max-w-screen-md"
      >
        <Content />
      </article>
    </div>

    <!-- Author Info -->
    {
      author ? (
        <div class="mt-8 flex flex-col items-start gap-2">
          <div>
            {author.data.avatar && (
              <Image
                src={author.data.avatar}
                alt={author.data.name || "undefined"}
                width={34}
                height={34}
                class="h-auto rounded-md"
              />
            )}
          </div>
          <div class="flex flex-col">
            <a
              href={`/authors/${author.slug}`}
              class="text-sm font-semibold text-gray-900 hover:text-violet-500 dark:text-gray-100"
            >
              by <span class="text-gray-400"> @{author.data.name} </span>
            </a>
          </div>
        </div>
      ) : (
        <div class="mt-8 flex flex-col items-start text-center">
          <div class="my-2 h-8 w-8 rounded-md bg-gray-200 dark:bg-gray-700" />
          <p class="text-sm font-semibold text-gray-900 dark:text-gray-100">
            Unknown Author
          </p>
          <p class="text-xs text-gray-500 dark:text-gray-400">
            This author is currently not listed in our records.
          </p>
        </div>
      )
    }
  </div>
</Layout>
